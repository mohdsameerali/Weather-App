{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samali tech\\\\hooksreact\\\\src\\\\App.js\";\n// <---------------------------------------------------- PROGRAM START--------------------------------------------------->\n//<----------------------------------------------------- useState hooks in react js--------------------------------------->\n// import React, { useState } from \"react\";\n// import css from \"./index.css\";\n// function App(){\n//     const [myName ,setmyname]=useState(\"mohd sameer ali \");\n//     function changeName(){\n//         setmyname(\"SAMALI TECH INFO \");\n//     }\n// console.log(myName);\n// return(\n//     <>\n//         <div className=\"mybox\">\n//             <h1>{myName}</h1>\n//             <button className=\"butt\" onClick={changeName}>click me</button>\n//         </div>\n//     </>\n// );\n// }\n// export default App;\n// <---------------------------------------------------- program end--------------------------------------------------------------->\n// <---------------------------------------------------- PROGRAM START--------------------------------------------------->\n//<----------------------------------------------------- useEffect hooks in react js--------------------------------------->\n// Defination:-The useEffect allows you to perform side effects in your funtional components.\n// useEffect is the combination of componentDidMount, componentDidUpdate, and componentWillUnmount of React class lifecycle methods\n// There are two common kinds of side effects in React components: those that don’t require cleanup, and those that do\n// \n// <---------------What are side effects?--------->\n// Side effects are basically anything that affects something outside of the scope of the current function that’s being executed. \n// In our dashboard, this includes:\n// API requests to our backend service\n// Calls to our authentication service\n// Error tracking calls to Sentry\n// <---------example to understand sideEffect------>\n// In the context of our app, this looks like:\n// Developer clicks “Register application.”\n// We dispatch a REGISTER_APPLICATION event.\n// We make a call to our backend service to register the application. (side effect!)\n// We extract the data returned from the backend call and dispatch a REGISTER_APPLICATION_SUCCESS event with this data. (side effect!)\n// We route to this new registered application. (side effect!)\n// import React, { useEffect, useState } from \"react\";\n// import css from \"./index.css\";\n// function App(){\n//     const [count ,setCount]=useState(0);\n//     function myfun(){\n//         setCount(count+1);\n//     }\n// useEffect(function(){\n//     console.log(\" hellow this is useEffect called\")\n//     // here this console is  called (1) when we render or execute the function and (2)every single time when we update it \n// });\n// return(\n//     <>\n//         <div className=\"mybox\">\n//             <h1>{count}</h1>\n//             <button className=\"butt\" onClick={myfun}>click me</button>\n//         </div>\n//     </>\n// );\n// }\n// export default App;\n// <--------------------------------------------------useEffect secound program ----------------------------------------------------------->\n// imagin we have two counter app(increment and decrement) and i want to apply \"useEffect \" only one (increment) app let us see how to do that\n// import React, { useEffect, useState } from \"react\";\n// import css from \"./index.css\";\n// function App(){\n//     const [count1 ,setCount1]=useState(0);\n//     function increment(){\n//         setCount1(count1+1);\n//     }\n//     const [count2 ,setCount2]=useState(50);\n//     function decrement(){\n//         setCount2(count2-1);\n//     }\n// useEffect(function(){\n//     console.log(\" hellow this is useEffect called\")\n// },[count1]);\n// here useEffect is going to apply to increment app as we have pass one count1\n// return(\n//     <>\n//         <div className=\"mybox\">\n//             <h1>{count1}</h1>\n//             <button className=\"butt\" onClick={increment}>click me</button>\n//         </div>\n//         <div className=\"mybox\">\n//             <h1>{count2}</h1>\n//             <button className=\"butt\" onClick={decrement}>click me</button>\n//         </div>\n//     </>\n// );\n// }\n// export default App;\n// <---------------------------------------------------- program end--------------------------------------------------------------->\n// <---------------------------------------------------- PROGRAM START--------------------------------------------------->\n//<----------------------------------------------------- useContext api hooks in react js--------------------------------------->\n// Defination:-\"context\" provides a way to pass data through the component tree without having to pass \"props\" down manually at every level\n// it is introduced in the version 16.3 as  a solution for \"prop drilling\"\n// what is prop drilling?\n// Ans) it is situation where data is passed from one component through multiple interdependent components until you get the component where the data is needed  \n// here we have three component \"parent(App)\", \"child\" and \"grandchild\". \n// now imagine we want to pass data from \"parent\" to \"grandchild\", we can use \"props\"\n// problem:- here but the problem with \"props\" we have to pass data from parent to child and then to grandchild so we here unnecessary getting the proble of \"propdrilling\" \n// solution:- to solve the issue \"context api\"come into the picture\nimport React, { Component } from 'react';\nimport Child from \"./Child\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MyContext = /*#__PURE__*/React.createContext(); //  creating \"context api\"\n\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      name: \"sameer\",\n      age: 25\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"this is a parent component(Provider component) \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n        value: this.state.age,\n        children: [\"  \", /*#__PURE__*/_jsxDEV(Child, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"names":["React","Component","Child","MyContext","createContext","App","state","name","age","render"],"sources":["C:/Users/samali tech/hooksreact/src/App.js"],"sourcesContent":["// <---------------------------------------------------- PROGRAM START--------------------------------------------------->\r\n//<----------------------------------------------------- useState hooks in react js--------------------------------------->\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import css from \"./index.css\";\r\n\r\n\r\n// function App(){\r\n\r\n\r\n//     const [myName ,setmyname]=useState(\"mohd sameer ali \");\r\n  \r\n//     function changeName(){\r\n//         setmyname(\"SAMALI TECH INFO \");\r\n//     }\r\n// console.log(myName);\r\n\r\n// return(\r\n//     <>\r\n//         <div className=\"mybox\">\r\n//             <h1>{myName}</h1>\r\n//             <button className=\"butt\" onClick={changeName}>click me</button>\r\n//         </div>\r\n//     </>\r\n// );\r\n// }\r\n\r\n\r\n// export default App;\r\n\r\n// <---------------------------------------------------- program end--------------------------------------------------------------->\r\n\r\n\r\n\r\n\r\n\r\n// <---------------------------------------------------- PROGRAM START--------------------------------------------------->\r\n//<----------------------------------------------------- useEffect hooks in react js--------------------------------------->\r\n// Defination:-The useEffect allows you to perform side effects in your funtional components.\r\n// useEffect is the combination of componentDidMount, componentDidUpdate, and componentWillUnmount of React class lifecycle methods\r\n// There are two common kinds of side effects in React components: those that don’t require cleanup, and those that do\r\n// \r\n// <---------------What are side effects?--------->\r\n// Side effects are basically anything that affects something outside of the scope of the current function that’s being executed. \r\n// In our dashboard, this includes:\r\n// API requests to our backend service\r\n// Calls to our authentication service\r\n// Error tracking calls to Sentry\r\n// <---------example to understand sideEffect------>\r\n// In the context of our app, this looks like:\r\n// Developer clicks “Register application.”\r\n// We dispatch a REGISTER_APPLICATION event.\r\n// We make a call to our backend service to register the application. (side effect!)\r\n// We extract the data returned from the backend call and dispatch a REGISTER_APPLICATION_SUCCESS event with this data. (side effect!)\r\n// We route to this new registered application. (side effect!)\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import css from \"./index.css\";\r\n\r\n\r\n// function App(){\r\n\r\n\r\n//     const [count ,setCount]=useState(0);\r\n  \r\n//     function myfun(){\r\n//         setCount(count+1);\r\n//     }\r\n\r\n\r\n// useEffect(function(){\r\n//     console.log(\" hellow this is useEffect called\")\r\n//     // here this console is  called (1) when we render or execute the function and (2)every single time when we update it \r\n// });\r\n\r\n// return(\r\n//     <>\r\n//         <div className=\"mybox\">\r\n//             <h1>{count}</h1>\r\n//             <button className=\"butt\" onClick={myfun}>click me</button>\r\n//         </div>\r\n//     </>\r\n// );\r\n// }\r\n\r\n\r\n// export default App;\r\n\r\n\r\n\r\n// <--------------------------------------------------useEffect secound program ----------------------------------------------------------->\r\n// imagin we have two counter app(increment and decrement) and i want to apply \"useEffect \" only one (increment) app let us see how to do that\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import css from \"./index.css\";\r\n\r\n\r\n// function App(){\r\n\r\n\r\n//     const [count1 ,setCount1]=useState(0);\r\n  \r\n//     function increment(){\r\n//         setCount1(count1+1);\r\n//     }\r\n//     const [count2 ,setCount2]=useState(50);\r\n  \r\n//     function decrement(){\r\n//         setCount2(count2-1);\r\n//     }\r\n\r\n\r\n// useEffect(function(){\r\n//     console.log(\" hellow this is useEffect called\")\r\n// },[count1]);\r\n// here useEffect is going to apply to increment app as we have pass one count1\r\n\r\n// return(\r\n//     <>\r\n//         <div className=\"mybox\">\r\n//             <h1>{count1}</h1>\r\n//             <button className=\"butt\" onClick={increment}>click me</button>\r\n//         </div>\r\n//         <div className=\"mybox\">\r\n//             <h1>{count2}</h1>\r\n//             <button className=\"butt\" onClick={decrement}>click me</button>\r\n//         </div>\r\n//     </>\r\n// );\r\n// }\r\n\r\n\r\n// export default App;\r\n\r\n// <---------------------------------------------------- program end--------------------------------------------------------------->\r\n\r\n\r\n\r\n\r\n// <---------------------------------------------------- PROGRAM START--------------------------------------------------->\r\n//<----------------------------------------------------- useContext api hooks in react js--------------------------------------->\r\n// Defination:-\"context\" provides a way to pass data through the component tree without having to pass \"props\" down manually at every level\r\n// it is introduced in the version 16.3 as  a solution for \"prop drilling\"\r\n// what is prop drilling?\r\n// Ans) it is situation where data is passed from one component through multiple interdependent components until you get the component where the data is needed  \r\n// here we have three component \"parent(App)\", \"child\" and \"grandchild\". \r\n// now imagine we want to pass data from \"parent\" to \"grandchild\", we can use \"props\"\r\n// problem:- here but the problem with \"props\" we have to pass data from parent to child and then to grandchild so we here unnecessary getting the proble of \"propdrilling\" \r\n// solution:- to solve the issue \"context api\"come into the picture\r\n\r\nimport React, { Component } from 'react';\r\nimport Child from \"./Child\";\r\n export const MyContext=React.createContext();  //  creating \"context api\"\r\nexport default class App extends Component {\r\n\r\n  state={\r\n    name:\"sameer\",\r\n    age:25\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n       \r\n       <h3>this is a parent component(Provider component) </h3>\r\n       <MyContext.Provider value={this.state.age}>  {/* data passing to Consumer coponent */}\r\n       <Child/>\r\n\r\n       </MyContext.Provider>\r\n       </>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AAAA;AACA;AAGA;AACA;AAGA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AAGA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AACA;AAEA;AACA;AAGA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AACC,OAAO,MAAMC,SAAS,gBAACH,KAAK,CAACI,aAAN,EAAhB,C,CAAwC;;AAChD,eAAe,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;EAAA;IAAA;IAAA,KAEzCK,KAFyC,GAEnC;MACJC,IAAI,EAAC,QADD;MAEJC,GAAG,EAAC;IAFA,CAFmC;EAAA;;EAMzCC,MAAM,GAAG;IACP,oBACE;MAAA,wBAEC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFD,eAGC,QAAC,SAAD,CAAW,QAAX;QAAoB,KAAK,EAAE,KAAKH,KAAL,CAAWE,GAAtC;QAAA,8BACA,QAAC,KAAD;UAAA;UAAA;UAAA;QAAA,QADA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHD;IAAA,gBADF;EAUD;;AAjBwC"},"metadata":{},"sourceType":"module"}