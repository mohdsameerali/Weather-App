{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samali tech\\\\hooksreact\\\\src\\\\KeysReact.jsx\";\n// Note:we know that our react.js  is based on \"virtual DOM\"(Virtual representation of real DOM) concept which means ....\n//..when ever there is a \"change\" our application , \"react\" will  not re-render whole application ...\n// ..Instad of re-rendering  whole application it will render only page that need to be updated\n// statement:- \n//p1=[\"CSK\",\"MI\",\"RCB\"]: it is list which is saved\n//p2=[\"CSK\",\"MI\",\"RCB\",\"SH\"]: it is list which is same as \"p1\" but with a update of \"SH\" which is not yet  saved\n// After saving \"react app\" will match both previous one(p1) and updated one(p2) and update the changes and ..\n// change \"p1\" with  \"p2\"\n// let say we have list \"p1\" \"[\"CSK\",\"MI\",\"RCB\"]and i want to add \"SH\" ([\"CSK\",\"MI\",\"RCB\",\"SH\"]) to this list, .\n// fist it will check previous list \"\"[\"CSK\",\"MI\",\"RCB\"]\"  and mathes it with updated list ([\"CSK\",\"MI\",\"RCB\",\"SH\"])  list..\n// how react mactch p1 and p2:-\n// react matches first element of \"p1\" with \"p2\" and if it is same it will not update, same with secound third and ..\n//  on coming to fourth element it will not find that fourth  element is not exist  in \"p1\" but  exist in 'p2'(i.e SH)..\n// SO it will understand that fourth element is new it need to be updated and it will update it\n// problem statement:- \n// but imagine we have \"p2\" which has \"SH\" in first place  p2=[\"SH\",CSK\",\"MI\",\"RCB\"] which is need to updated..\n// so react apply same rule as previous one, so it will match first element of  \"p1\" with \"p2\" and find that there are not..\n// not matching and think that it is new element and need to be updated and same with secound ,third and fouth element ..\n// so it will think that all element are new so it will create a new list which means instad of updating one element..\n// it will create new list and reander that, due  to this problem  there is no sense to use react bcz one single update..\n// ..we need to render whole list, to deal with this  issue we have  \"keys\"\nimport React from 'react';\nexport default function Keys() {\n  var _this = this;\n  var ipl = [\"CSk\", \"MI\", \"RCB\"];\n  var myteams = ipl.map(function (ipl) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 10\n      }\n    }, ipl);\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 2\n    }\n  }, index));\n}","map":{"version":3,"names":["React","Keys","ipl","myteams","map","index"],"sources":["C:/Users/samali tech/hooksreact/src/KeysReact.jsx"],"sourcesContent":["  // Note:we know that our react.js  is based on \"virtual DOM\"(Virtual representation of real DOM) concept which means ....\r\n  //..when ever there is a \"change\" our application , \"react\" will  not re-render whole application ...\r\n  // ..Instad of re-rendering  whole application it will render only page that need to be updated\r\n  // statement:- \r\n  //p1=[\"CSK\",\"MI\",\"RCB\"]: it is list which is saved\r\n  //p2=[\"CSK\",\"MI\",\"RCB\",\"SH\"]: it is list which is same as \"p1\" but with a update of \"SH\" which is not yet  saved\r\n  // After saving \"react app\" will match both previous one(p1) and updated one(p2) and update the changes and ..\r\n  // change \"p1\" with  \"p2\"\r\n  // let say we have list \"p1\" \"[\"CSK\",\"MI\",\"RCB\"]and i want to add \"SH\" ([\"CSK\",\"MI\",\"RCB\",\"SH\"]) to this list, .\r\n  // fist it will check previous list \"\"[\"CSK\",\"MI\",\"RCB\"]\"  and mathes it with updated list ([\"CSK\",\"MI\",\"RCB\",\"SH\"])  list..\r\n  // how react mactch p1 and p2:-\r\n  // react matches first element of \"p1\" with \"p2\" and if it is same it will not update, same with secound third and ..\r\n  //  on coming to fourth element it will not find that fourth  element is not exist  in \"p1\" but  exist in 'p2'(i.e SH)..\r\n  // SO it will understand that fourth element is new it need to be updated and it will update it\r\n  // problem statement:- \r\n  // but imagine we have \"p2\" which has \"SH\" in first place  p2=[\"SH\",CSK\",\"MI\",\"RCB\"] which is need to updated..\r\n  // so react apply same rule as previous one, so it will match first element of  \"p1\" with \"p2\" and find that there are not..\r\n  // not matching and think that it is new element and need to be updated and same with secound ,third and fouth element ..\r\n  // so it will think that all element are new so it will create a new list which means instad of updating one element..\r\n  // it will create new list and reander that, due  to this problem  there is no sense to use react bcz one single update..\r\n  // ..we need to render whole list, to deal with this  issue we have  \"keys\"\r\nimport React from 'react'\r\n\r\nexport default function Keys() {\r\n\r\n  var ipl=[\"CSk\",\"MI\",\"RCB\"];\r\n\r\nvar myteams=ipl.map((ipl)=>{\r\n  return <li key={index}>{ipl}</li>});\r\n  return (\r\n    <>\r\n <h1 >{index}</h1>\r\n\r\n    </>\r\n  )\r\n}\r\n"],"mappings":";AAAE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF,OAAOA,KAAK,MAAM,OAAO;AAEzB,eAAe,SAASC,IAAI,GAAG;EAAA;EAE7B,IAAIC,GAAG,GAAC,CAAC,KAAK,EAAC,IAAI,EAAC,KAAK,CAAC;EAE5B,IAAIC,OAAO,GAACD,GAAG,CAACE,GAAG,CAAC,UAACF,GAAG,EAAG;IACzB,oBAAO;MAAI,GAAG,EAAEG,KAAM;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAEH,GAAG,CAAM;EAAA,CAAC,CAAC;EACnC,oBACE,uDACH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAMG,KAAK,CAAM,CAEX;AAEP"},"metadata":{},"sourceType":"module"}