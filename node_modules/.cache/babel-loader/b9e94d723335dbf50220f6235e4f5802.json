{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samali tech\\\\samreact\\\\src\\\\index.js\";\n//hello world in react\n// \"render\" is a method, it is use for showing the output \n// Note : uncomment the program  to use it \n// Note : \n//<---------------------start-------------------->\n// import React from \"react\";\n// import  ReactDOM  from \"react-dom\";\n// ReactDOM.render(                                 // \"reactDom\"  is a package and render is   a method  or function \n//     <h1> this is my hello world program </h1>,  //what to show\n//     document.getElementById(\"root\")             // where to show \n// );\n//<--------------------- end-------------------->\n// Note : uncomment the program  to use it \n//hello world in react\n// <-----------multipul element in jsx----------->\n//\"JSX\"  Stands for javascript XML\n//\"XML\" Extensible markedup language\n// Note: \"JSX\" it is a combination of javascript and htm\n//we have one h1 element  and now i want to add on <p> element but onece we add <p>element it wil show as error bcz render method ...\n//only accept one  element so we use one <div>or array of an element\"[]\" element as parent element\n//<--------------------- program start-------------------->\n// import React, { Fragment } from \"react\";\n// import  ReactDOM  from \"react-dom\";\n// ReactDOM.render( \n//     <div>\n//     <h1> this is my hello world program </h1>, \n//     <p> this is my hello world program </p>,    \n//     <h2> this is my hello world program </h2>, \n//     </div>,\n//     document.getElementById(\"root\")             \n//     );\n//<--------------------- program end-------------------->\n// <-----------React.Fragment element in jsx----------->\n//in the place of \"div\" element we can use fragment element bcz div(root) inside div(parent element) take  extra spacea to solve...\n// this problam we use \"React.Fragmant\" element\n//React.Fragment is faster and less  memory consuming as compared to div\n//Note: the first letter of \"React.Fragment\" must be capital\n//<--------------------- program start-------------------->\n// import React from \"react\";\n// import  ReactDOM  from \"react-dom\";\n// ReactDOM.render( \n// <React.Fragment>\n//     <h1> this is my hello world program </h1>\n//     <p> this is my hello world pS </p>   \n//     <h2> this is my hello world program </h2> \n//     </React.Fragment>,\n//     document.getElementById(\"root\")             \n//     );\n// <--------another way of to write \"React.Fragmant\"  is \"<> </>\"----------->\n// import React from \"react\";\n// import  ReactDOM  from \"react-dom\";\n// ReactDOM.render( \n// <>\n//     <h1> this is my hello world program </h1>\n//     <p> this is my </p>   \n//     <h2> this is my hello world program </h2> \n//     </>,\n//     document.getElementById(\"root\")             \n//     );\n//<--------------------- program end-------------------->\n//<--------------------- challenge-1-------------------->\n//(1) create a react app from scratch\n//(2) add one  h1 element in it \n//(3)add one p element init\n//(4) add list of fav 5 netflix serise in it using an order list\n//<--------------------- program start-------------------->\n// import React from \"react\";\n// import  ReactDOM  from \"react-dom\";\n// ReactDOM.render(\n//     <>\n//     <h1> this is h1 element</h1>\n//     <p> this is a paragraph element</p>\n//     <ol>\n//         <li>hero</li>\n//         <li>dil</li>\n//         <li>janvar</li>\n//         <li>hum app kai hai kom</li>\n//         <li> tu mera hero</li>\n//     </ol>\n//     </>,\n//     document.getElementById(\"root\")\n// );\n//<--------------------- program end-------------------->\n//<--------------------- Expressions in jsx-------------------->\n// to use javascript inside html element we use \"{}\"\n// Note: inside the curly bracess \"{}\" we can use only expressions but not statements like if , else etc \n//<--------------------- program start-------------------->\n// import React from \"react\";\n// import  ReactDOM  from \"react-dom\";\n//  const myname= \"sameer\";\n//  const luckynum=52;\n//  const a =12;\n//  const b =55;\n// ReactDOM.render(\n//     <>\n//     <h1> my name is {myname}</h1>\n//     <p>my luckey number is {luckynum}</p>\n//     <h2> the additon of a and b is {a+b}</h2>\n//     <p> any random number is {Math.random()}</p>\n//     </>,\n//     document.getElementById(\"root\")\n// );\n//<--------------------- program end-------------------->\n//<--------------------- ES6 Template Literals in jsx-------------------->\n// in Template Literals we use backtick(`) instad of double(\"\") or single('') quations \n// with Template Literals we add or sub two num without storing it in a variable \n//<--------------------- program start-------------------->\n// import React from \"react\";\n// import  ReactDOM  from \"react-dom\";\n// const fname =\"sameer\";\n// const lname =\"ali\";\n// ReactDOM.render(\n//     <h1> my name is {fname} {lname}</h1>, // (or) <h1> my name is {fname +\" \"+ lname}</h1> are old way now we have template literals\n//     document.getElementById(\"root\")\n// );\n//  Template Literals program \n// import React from \"react\";\n// import  ReactDOM  from \"react-dom\";\n// const fname =\"sameer\";\n// const lname =\"ali\";\n// ReactDOM.render(\n//     <>\n//      <h1> my name is {`${fname} ${lname}`}</h1>  (or)\n//     <h2>{` my name is ${fname} ${lname}`}</h2>\n//     <p> adding two numbers {`${8+9}`}</p>\n//     </>,\n//      document.getElementById(\"root\")\n// );\n//<--------------------- program end-------------------->\n//<--------------------- challenge-2-------------------->\n//(1) create a react app from scratch\n//(2) add one  h1 element in it \n//(3)add one p element init with current date\n//(4)add one p element init with current time \n//Note :new Date() is not just gives the date but also time  if we only date we can use new Date().tolocaleDateString().....\n//for only time new Date().tolocaleTimeString()\n//<--------------------- program start-------------------->\n// import React from \"react\";\n// import  ReactDOM  from \"react-dom\";\n// const name =\"sameer\";\n// const currDate=new Date().toLocaleDateString();\n// const currTime =new Date().toLocaleTimeString();\n// ReactDOM.render(\n//     <>\n//     <h2>{` my name is ${name}`}</h2>\n//     <p> current date is ={`${currDate}`}</p>\n//     <p> current time  is= {`${currTime}`}</p>\n//     </>,\n//      document.getElementById(\"root\")\n// );\n//<--------------------- program end-------------------->\n//<--------------------- attributes in jsx-------------------->\n//<a href=\"\" target=\"\"></a> here href and target is an attribute in html \n// Note: attribute name is must be in camel case \n// \"contentEditable\" it give as the power to editit the text\n// in <img> tag if we are not writing anything inside <img></img> tag we can close  useing self closing tag </img>\n//<--------------------- program start-------------------->\n// import React from \"react\";\n// import  ReactDOM  from \"react-dom\";\n// const name =\"sameer\";\n// ReactDOM.render(\n//     <>\n//     <h1 contentEditable=\"true\">my name is {name }</h1>\n//     </>,\n//      document.getElementById(\"root\")\n// );\n//<--------------------- -------------------->\n//<--------------------- attributes in jsx-------------------->\n//<--------------------- program start-------------------->\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst name = \"sameer\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"MY NAME IS \", name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this)\n}, void 0, false), document.getElementById(\"root\"));","map":{"version":3,"names":["React","ReactDOM","name","render","document","getElementById"],"sources":["C:/Users/samali tech/samreact/src/index.js"],"sourcesContent":["\n//hello world in react\n// \"render\" is a method, it is use for showing the output \n// Note : uncomment the program  to use it \n// Note : \n//<---------------------start-------------------->\n\n\n// import React from \"react\";\n// import  ReactDOM  from \"react-dom\";\n\n\n// ReactDOM.render(                                 // \"reactDom\"  is a package and render is   a method  or function \n//     <h1> this is my hello world program </h1>,  //what to show\n//     document.getElementById(\"root\")             // where to show \n// );\n\n//<--------------------- end-------------------->\n\n\n// Note : uncomment the program  to use it \n//hello world in react\n\n\n\n\n\n\n// <-----------multipul element in jsx----------->\n//\"JSX\"  Stands for javascript XML\n//\"XML\" Extensible markedup language\n// Note: \"JSX\" it is a combination of javascript and htm\n//we have one h1 element  and now i want to add on <p> element but onece we add <p>element it wil show as error bcz render method ...\n//only accept one  element so we use one <div>or array of an element\"[]\" element as parent element\n//<--------------------- program start-------------------->\n// import React, { Fragment } from \"react\";\n// import  ReactDOM  from \"react-dom\";\n// ReactDOM.render( \n//     <div>\n//     <h1> this is my hello world program </h1>, \n//     <p> this is my hello world program </p>,    \n//     <h2> this is my hello world program </h2>, \n//     </div>,\n//     document.getElementById(\"root\")             \n                                                \n//     );\n//<--------------------- program end-------------------->\n                \n\n\n\n\n\n// <-----------React.Fragment element in jsx----------->\n//in the place of \"div\" element we can use fragment element bcz div(root) inside div(parent element) take  extra spacea to solve...\n// this problam we use \"React.Fragmant\" element\n//React.Fragment is faster and less  memory consuming as compared to div\n//Note: the first letter of \"React.Fragment\" must be capital\n\n//<--------------------- program start-------------------->\n\n// import React from \"react\";\n// import  ReactDOM  from \"react-dom\";\n// ReactDOM.render( \n\n// <React.Fragment>\n//     <h1> this is my hello world program </h1>\n//     <p> this is my hello world pS </p>   \n//     <h2> this is my hello world program </h2> \n//     </React.Fragment>,\n//     document.getElementById(\"root\")             \n                                                \n//     );\n// <--------another way of to write \"React.Fragmant\"  is \"<> </>\"----------->\n// import React from \"react\";\n// import  ReactDOM  from \"react-dom\";\n// ReactDOM.render( \n\n// <>\n//     <h1> this is my hello world program </h1>\n//     <p> this is my </p>   \n//     <h2> this is my hello world program </h2> \n//     </>,\n//     document.getElementById(\"root\")             \n                                                \n//     );\n//<--------------------- program end-------------------->\n\n\n\n\n//<--------------------- challenge-1-------------------->\n//(1) create a react app from scratch\n//(2) add one  h1 element in it \n//(3)add one p element init\n//(4) add list of fav 5 netflix serise in it using an order list\n//<--------------------- program start-------------------->\n\n// import React from \"react\";\n// import  ReactDOM  from \"react-dom\";\n// ReactDOM.render(\n//     <>\n//     <h1> this is h1 element</h1>\n//     <p> this is a paragraph element</p>\n//     <ol>\n//         <li>hero</li>\n//         <li>dil</li>\n//         <li>janvar</li>\n//         <li>hum app kai hai kom</li>\n//         <li> tu mera hero</li>\n\n//     </ol>\n//     </>,\n//     document.getElementById(\"root\")\n// );\n//<--------------------- program end-------------------->\n\n\n\n\n//<--------------------- Expressions in jsx-------------------->\n// to use javascript inside html element we use \"{}\"\n// Note: inside the curly bracess \"{}\" we can use only expressions but not statements like if , else etc \n//<--------------------- program start-------------------->\n// import React from \"react\";\n// import  ReactDOM  from \"react-dom\";\n//  const myname= \"sameer\";\n//  const luckynum=52;\n//  const a =12;\n//  const b =55;\n\n// ReactDOM.render(\n//     <>\n//     <h1> my name is {myname}</h1>\n//     <p>my luckey number is {luckynum}</p>\n//     <h2> the additon of a and b is {a+b}</h2>\n//     <p> any random number is {Math.random()}</p>\n//     </>,\n//     document.getElementById(\"root\")\n// );\n//<--------------------- program end-------------------->\n\n\n\n\n\n\n//<--------------------- ES6 Template Literals in jsx-------------------->\n// in Template Literals we use backtick(`) instad of double(\"\") or single('') quations \n// with Template Literals we add or sub two num without storing it in a variable \n//<--------------------- program start-------------------->\n// import React from \"react\";\n// import  ReactDOM  from \"react-dom\";\n// const fname =\"sameer\";\n// const lname =\"ali\";\n// ReactDOM.render(\n\n//     <h1> my name is {fname} {lname}</h1>, // (or) <h1> my name is {fname +\" \"+ lname}</h1> are old way now we have template literals\n\n//     document.getElementById(\"root\")\n// );\n//  Template Literals program \n// import React from \"react\";\n// import  ReactDOM  from \"react-dom\";\n// const fname =\"sameer\";\n// const lname =\"ali\";\n// ReactDOM.render(\n//     <>\n//      <h1> my name is {`${fname} ${lname}`}</h1>  (or)\n//     <h2>{` my name is ${fname} ${lname}`}</h2>\n//     <p> adding two numbers {`${8+9}`}</p>\n//     </>,\n//      document.getElementById(\"root\")\n// );\n//<--------------------- program end-------------------->\n\n\n\n\n\n\n//<--------------------- challenge-2-------------------->\n//(1) create a react app from scratch\n//(2) add one  h1 element in it \n//(3)add one p element init with current date\n//(4)add one p element init with current time \n//Note :new Date() is not just gives the date but also time  if we only date we can use new Date().tolocaleDateString().....\n//for only time new Date().tolocaleTimeString()\n//<--------------------- program start-------------------->\n\n// import React from \"react\";\n// import  ReactDOM  from \"react-dom\";\n// const name =\"sameer\";\n// const currDate=new Date().toLocaleDateString();\n// const currTime =new Date().toLocaleTimeString();\n\n\n// ReactDOM.render(\n//     <>\n//     <h2>{` my name is ${name}`}</h2>\n//     <p> current date is ={`${currDate}`}</p>\n//     <p> current time  is= {`${currTime}`}</p>\n\n//     </>,\n//      document.getElementById(\"root\")\n// );\n//<--------------------- program end-------------------->\n\n\n\n\n\n\n//<--------------------- attributes in jsx-------------------->\n//<a href=\"\" target=\"\"></a> here href and target is an attribute in html \n// Note: attribute name is must be in camel case \n// \"contentEditable\" it give as the power to editit the text\n// in <img> tag if we are not writing anything inside <img></img> tag we can close  useing self closing tag </img>\n//<--------------------- program start-------------------->\n// import React from \"react\";\n// import  ReactDOM  from \"react-dom\";\n// const name =\"sameer\";\n\n\n\n// ReactDOM.render(\n//     <>\n//     <h1 contentEditable=\"true\">my name is {name }</h1>\n\n//     </>,\n//      document.getElementById(\"root\")\n// );\n//<--------------------- -------------------->\n\n\n\n\n//<--------------------- attributes in jsx-------------------->\n//<--------------------- program start-------------------->\nimport React from \"react\";\nimport  ReactDOM  from \"react-dom\";\nconst name =\"sameer\";\n\n\n\nReactDOM.render(\n    <>\n    <h1>MY NAME IS {name}</h1>\n\n    </>,\n     document.getElementById(\"root\")\n);\n\n"],"mappings":";AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAOA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAQC,QAAR,MAAuB,WAAvB;;;AACA,MAAMC,IAAI,GAAE,QAAZ;AAIAD,QAAQ,CAACE,MAAT,eACI;EAAA,uBACA;IAAA,0BAAgBD,IAAhB;EAAA;IAAA;IAAA;IAAA;EAAA;AADA,iBADJ,EAKKE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALL"},"metadata":{},"sourceType":"module"}